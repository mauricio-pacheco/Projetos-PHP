<?php

//   -------------------------------------------------------------------------------
//  |                  net2ftp: a web based FTP client                              |
//  |              Copyright (c) 2003-2004 by David Gartner                         |
//  |                                                                               |
//  | This program is free software; you can redistribute it and/or                 |
//  | modify it under the terms of the GNU General Public License                   |
//  | as published by the Free Software Foundation; either version 2                |
//  | of the License, or (at your option) any later version.                        |
//  |                                                                               |
//   -------------------------------------------------------------------------------



// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function printFeedbackForm($formresult) {

// --------------
// This function prints the feedback form
// --------------

// -------------------------------------------------------------------------
// Global variables and settings
// -------------------------------------------------------------------------
	global $name, $subject, $email, $messagebody, $REMOTE_ADDR;
	$email_feedback = getSetting("email_feedback");
	$show_sourcefunction = getSetting("show_sourcefunction");

	if ($show_sourcefunction == "yes") { echo "\n\n\n<!-- Code generated by function printFeedbackForm() BEGIN -->"; }

if ($formresult== "") { $formresult = "form"; }

switch ($formresult) {

// -------------------------------------------------------------------------
// formormail: form
// -------------------------------------------------------------------------
	case "form":
		echo "<form action=\"" . printPHP_SELF("no") . "\" method=post>\n";
		echo "<center>\n";
		echo "If you want to send us some feedback, please use the form below.<br />Do not forget to mention your email address if you want us to reply to you.<br /><br />\n";
		echo "<table>\n";
		echo "<tr><td>Name:</td><td><input type=\"text\" name=\"name\" /></td></tr>\n";
		echo "<tr><td>Subject:</td><td><input type=\"text\" name=\"subject\" /></td></tr>\n";
		echo "<tr><td>Email address:</td><td><input type=\"text\" name=\"email\" /></td></tr>\n";
		echo "</table>\n";
		echo "<textarea rows=\"10\" cols=\"45\" name=\"messagebody\"></textarea><br /><br />\n";
		echo "<input type=\"hidden\" name=\"state\" value=\"feedback\" />\n";
		echo "<input type=\"hidden\" name=\"formresult\" value=\"result\" />\n";
		echo "<input type=\"button\" class=\"button\" value=\"Back\" onClick=\"top.history.back();\" />\n";
		echo "<input type=\"button\" class=\"button\" value=\"Send\" onClick=\"this.form.submit();\" />\n";
		echo "</center>\n";
		echo "</form>\n";
	break;
// -------------------------------------------------------------------------
// formormail: result
// -------------------------------------------------------------------------
	case "result":

// To
	   	$to = $email_feedback;

// Subject
		$subject = "[net2ftp]  " . $subject;

// Message
	   	$message = "";
	   	$message = $message . "Name: $name\n";
		$message = $message . "Subject: $subject\n";
		$message = $message . "Email: $email\n";
		$message = $message . "IP address: $REMOTE_ADDR\n";
		$message = $message . "Time: " . mytime() . "\n";
		$message = $message . "\nMessagebody:\n$messagebody\n";

// From
		// Verify the email address supplied by the user
		// If it appears valid, use it
		// If it does not appear valid, set it to the email_feedback value

		if (checkEmailAddress($email) == false) {
			$email = $email_feedback;
		}

// Headers
		$headers = "From: $email\nReply-To: $email\nX-Mailer: PHP/" . phpversion();

// SEND EMAIL 
// bool mail(string to, string subject, string message, string [additional_headers]);

		$mybool = mail($to, $subject, $message, $headers);

		if ($mybool == 1) {
			echo "<div style=\"text-align: center;\">\n";

			echo "<p>\n";
			echo "<b>Your message has been sent.</b>\n";
			echo "</p>\n";

			echo "<p>\n";
			echo "Name: " . $name . "<br />\n";
			echo "Subject: " . $subject . "<br />\n";
			echo "Email address: " . $email . "<br /><br />\n";
			echo "<u>Message:</u> <br />" . $messagebody . "<br />\n";
			echo "</p>\n";

			echo "<a href=\"" . printPHP_SELF("no") . "\" style=\"font-size: 110%; font-weight: bold;\">Back to the login page</a>\n";

			echo "</div>\n";
		}
		else {
			$resultArray['message'] = "Due to a technical problem, your message could not be sent. You may send the message via email to <a href=\"mailto:$email_feedback\">$email_feedback</a>."; 
			printErrorMessage($resultArray, "exit");
			echo "<u>Message:</u> <br />" . $messagebody . "<br />\n";
		}

	break;

	default:
		$resultArray['message'] = "Unexpected formresult string."; 
		printErrorMessage($resultArray, "");
	break;
} // End switch

	if ($show_sourcefunction == "yes") { echo "\n<!-- Code generated by function printFeedbackForm() END -->\n\n\n"; }

} // End function printFeedbackForm

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************



// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function encryptPassword($password) {

// --------------
// This function takes a clear-text password and returns an encrypted password
// --------------

// 1 - Convert pw to nr

	for ($i=0; $i<strlen($password); $i=$i+1) {
		$ascii_number = ord($password[$i]);
		if ($ascii_number < 10) { $ascii_number = "00" . $ascii_number; }
		elseif ($ascii_number < 100) { $ascii_number = "0" . $ascii_number; }
		$password_ascii_number = $password_ascii_number . $ascii_number;
	}


// 2 - Do stuff with nr

// Method 1: pwe = a.pw + b
//	$password_encrypted = 2*($password_ascii_number) + 891;

// Method 2: number per number
	for ($i=0; $i<strlen($password_ascii_number); $i=$i+3) { 
		$number_unencrypted = substr($password_ascii_number, $i, 3);
		$number_encrypted = 999 - $number_unencrypted;
		$password_encrypted = $password_encrypted . "$number_encrypted";
	}

// No "encryption"
//	$password_encrypted = $password_ascii_number; // to comment later on!

	return $password_encrypted;

} // End function encryptPassword

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************




// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function decryptPassword($password_encrypted) {

// --------------
// This function takes an encrypted password and returns the clear-text password
// --------------

// 1 - Undo stuff to nr

// Method 1: pwe = a.pw + b
//	$password_ascii_number = round(1/2*($password_encrypted - 891)); // 097098 is converted to 97098 ==> add 0 or 00 in front
//	$pwn_length = strlen($password_ascii_number);
//	if     ($pwn_length - 3*floor($pwn_length/3) == 1) { $password_ascii_number = "00" . $password_ascii_number; }
//	elseif ($pwn_length - 3*floor($pwn_length/3) == 2) { $password_ascii_number = "0" . $password_ascii_number; }

// Method 2: number per number
	for ($i=0; $i<strlen($password_encrypted); $i=$i+3) { 
		$number_encrypted = substr($password_encrypted, $i, 3);
		$number_unencrypted = 999 - $number_encrypted;
		if ($number_unencrypted < 10) { $number_unencrypted = "00" . $number_unencrypted; }
		elseif ($number_unencrypted < 100) { $number_unencrypted = "0" . $number_unencrypted; }
		$password_ascii_number = $password_ascii_number . "$number_unencrypted";
	}

// No "encryption"
//	$password_ascii_number = $password_encrypted; // to comment later on!

// 2 - Convert nr to pw

	for ($j=0; $j<strlen($password_ascii_number); $j=$j+3) {
		$ascii_letter = chr(substr($password_ascii_number, $j, 3));
		$password = $password . $ascii_letter;
	}

	return $password;
//	return $password_ascii_number;

} // End function decryptPassword

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************






// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function printLoginInfo() {

// --------------
// This function prints the ftpserver, username and login information
// --------------

// -------------------------------------------------------------------------
// Global variables and settings
// -------------------------------------------------------------------------
	global $net2ftp_ftpserver, $net2ftp_ftpserverport, $net2ftp_username, $net2ftp_password_encrypted, $net2ftp_language, $net2ftp_skin, $net2ftp_passivemode, $net2ftp_sslconnect, $net2ftp_viewmode, $net2ftp_sort, $net2ftp_sortorder;

	printFunctionTags("printLoginInfo", "begin");

	echo "<input type=\"hidden\" name=\"net2ftp_ftpserver\" value=\"$net2ftp_ftpserver\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_ftpserverport\" value=\"$net2ftp_ftpserverport\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_username\" value=\"$net2ftp_username\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_password_encrypted\" value=\"$net2ftp_password_encrypted\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_language\" value=\"$net2ftp_language\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_skin\" value=\"$net2ftp_skin\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_passivemode\" value=\"$net2ftp_passivemode\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_sslconnect\" value=\"$net2ftp_sslconnect\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_viewmode\" value=\"$net2ftp_viewmode\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_sort\" value=\"$net2ftp_sort\" />\n";
	echo "<input type=\"hidden\" name=\"net2ftp_sortorder\" value=\"$net2ftp_sortorder\" />\n";
	printFunctionTags("printLoginInfo", "end");

} // End function printLoginInfo

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************





// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function printLoginInfo_javascript() {

// --------------
// This function prints the ftpserver, username and login information -- for javascript input
// --------------

	global $net2ftp_ftpserver, $net2ftp_ftpserverport, $net2ftp_username, $net2ftp_password_encrypted, $net2ftp_language, $net2ftp_skin, $net2ftp_passivemode, $net2ftp_sslconnect, $net2ftp_viewmode, $net2ftp_sort, $net2ftp_sortorder;

	printFunctionTags("printLoginInfo_javascript", "begin");

	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_ftpserver\" value=\"$net2ftp_ftpserver\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_ftpserverport\" value=\"$net2ftp_ftpserverport\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_username\" value=\"$net2ftp_username\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_password_encrypted\" value=\"$net2ftp_password_encrypted\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_language\" value=\"$net2ftp_language\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_skin\" value=\"$net2ftp_skin\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_passivemode\" value=\"$net2ftp_passivemode\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_sslconnect\" value=\"$net2ftp_sslconnect\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_viewmode\" value=\"$net2ftp_viewmode\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_sort\" value=\"$net2ftp_sort\" />');\n";
	echo "	d.writeln('<input type=\"hidden\" name=\"net2ftp_sortorder\" value=\"$net2ftp_sortorder\" />');\n";

	printFunctionTags("printLoginInfo_javascript", "end");

} // End function printLoginInfo

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************









// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function printBack($directory) {

// --------------
// This function prints a Back button which has its own form
// --------------

	printFunctionTags("printBack", "begin");

	echo "<form name=\"stateForm\" id=\"stateForm\" action=\"" . printPHP_SELF("no") . "\" method=\"post\">\n";
	printLoginInfo();
	echo "<input type=\"hidden\" name=\"directory\" value=\"$directory\" />\n";
	echo "<input type=\"hidden\" name=\"state\" value=\"browse\" />\n";
	echo "<input type=\"hidden\" name=\"state2\" value=\"main\" />\n";

//	echo "<input type=\"submit\" class=\"button\" value=\"Back\" />\n";
	echo getAction("back", "document.stateForm.submit();");

	echo "</form>\n";

	printFunctionTags("printBack", "end");

} // End function printBack

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************





// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function printBackInForm($directory, $form) {

// --------------
// This function prints a Back button which can be put into another form
// --------------

	printFunctionTags("printBackInForm", "begin");

//	echo "<input type=\"button\" class=\"button\" value=\"Back\" onClick=\"state.value='browse'; state2.value='main'; this.form.submit();\"/>\n";
	echo getAction("back", "document.$form.state.value='browse'; document.$form.state2.value='main'; document.$form.submit();") . " &nbsp ";

	printFunctionTags("printBackInForm", "end");

} // End function printBackInForm

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************




// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function printForwardInForm($form) {

// --------------
// This function prints a forward button which can be put into another form
// --------------

	printFunctionTags("printForwardInForm", "begin");

	echo getAction("forward", "document.$form.submit();") . "<br /><br />\n";

	printFunctionTags("printForwardInForm", "end");

} // End function printForwardInForm

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************






// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function printPHP_SELF($printstateinfo) {

// --------------
// This function prints $PHP_SELF, the name of the script itself
// If $printstateinfo is "no", the no parameters are added
// If it is "yes", then the state variables are added as parameters
// --------------

// -------------------------------------------------------------------------
// Global variables and settings
// -------------------------------------------------------------------------
	global $PHP_SELF, $net2ftp_ftpserver, $net2ftp_ftpserverport, $net2ftp_username, $net2ftp_language, $net2ftp_skin;
	global $state, $state2, $directory, $entry;

	if ($printstateinfo == "yes") {
		return "$PHP_SELF?ftpserver=$net2ftp_ftpserver&ftpserverport=$net2ftp_ftpserverport&username=$net2ftp_username&language=$net2ftp_language&skin=$net2ftp_skin&state=$state&state2=$state2&directory=$directory&entry=$entry";
	}
	else { return $PHP_SELF; }

} // End function printPHP_SELF

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************






// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function checkAuthorization($ftpserver, $ftpserverport, $directory) {

// --------------
// This function 
//    checks if the FTP server is in the list of those that may be accessed
//    checks if the FTP server is in the list of those that may NOT be accessed
//    checks if the IP address is in the list of banned IP addresses
//    checks if the FTP server port is in the allowed range
// If all is OK, then the user may continue...
// --------------

// -------------------------------------------------------------------------
// Global variables and settings
// -------------------------------------------------------------------------
	$net2ftp_allowed_ftpservers    = getAuthorization("net2ftp_allowed_ftpservers");
	$net2ftp_banned_ftpservers     = getAuthorization("net2ftp_banned_ftpservers");
	$net2ftp_banned_addresses      = getAuthorization("net2ftp_banned_addresses");
	$net2ftp_allowed_ftpserverport = getAuthorization("net2ftp_allowed_ftpserverport");
	$rootdirectory                 = getAuthorization("rootdirectory");

	global $REMOTE_ADDR;

// -------------------------------------------------------------------------
// Check if the FTP server is in the list of those that may be accessed
// -------------------------------------------------------------------------
	if ($net2ftp_allowed_ftpservers[1] != "ALL") {       // net2ftp_allowed_servers contains either "ALL", either a list of allowed servers
		$result1 = array_search($ftpserver, $net2ftp_allowed_ftpservers);
		if ($result1 == false) { return putResult(false, "", "checkAuthorization", "checkAuthorization > Check 1, allowed FTP servers", "The FTP server <b>$ftpserver</b> is not in the list of allowed FTP servers."); }
	}

// -------------------------------------------------------------------------
// Check if the FTP server is in the list of those that may NOT be accessed
// -------------------------------------------------------------------------
	$result2 = array_search($ftpserver, $net2ftp_banned_ftpservers);
	if ($result2 != false) { return putResult(false, "", "checkAuthorization", "checkAuthorization > Check 2, banned FTP servers", "The FTP server <b>$ftpserver</b> is in the list of banned FTP servers."); }

// -------------------------------------------------------------------------
// Check if the IP address is in the list of banned IP addresses
// -------------------------------------------------------------------------
	$result3 = array_search($REMOTE_ADDR, $net2ftp_banned_addresses);
	if ($result3 != false) { return putResult(false, "", "checkAuthorization", "checkAuthorization > Check 3, banned IP addresses", "Your IP address ($REMOTE_ADDR) is in the list of banned IP addresses."); }

// -------------------------------------------------------------------------
// Check if the FTP server port is OK
// -------------------------------------------------------------------------
// Do not perform this check if ALL ports are allowed
	if ($net2ftp_allowed_ftpserverport != "ALL" ) { 
// Report the error if another port nr has been entered than the one which is allowed
		if ($ftpserverport != $net2ftp_allowed_ftpserverport) { return putResult(false, "", "checkAuthorization", "checkAuthorization > Check 4, allowed FTP server port", "The FTP server port $ftpserverport may not be used."); }
	}

// -------------------------------------------------------------------------
// Check if the current directory is a subdirectory of the rootdirectory
// -------------------------------------------------------------------------
	if (isAuthorizedDirectory($directory) == false) { return putResult(false, "", "checkAuthorization", "checkAuthorization > Check 5, allowed directories", "You don't have the authorizations to view directory <b>$directory</b>."); }

// -------------------------------------------------------------------------
// If everything is OK, return true
// -------------------------------------------------------------------------
	return putResult(true, true, "", "", "");

} // end checkAuthorization

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************







// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function isAuthorizedDirectory($directory) {

// --------------
// This function checks if the directory is a subdirectory of the $rootdirectory
// The rootdirectory is first checked for the current user; if this is not set, the default rootdirectory is checked
// --------------

	global $net2ftp_username;
	$rootdirectory = getAuthorization("rootdirectory");

	if (isset($rootdirectory["$net2ftp_username"]) == true)   { $rootdirectory_to_check = $rootdirectory["$net2ftp_username"]; }
	elseif (isset($rootdirectory["default"]) == true) { $rootdirectory_to_check = $rootdirectory["default"]; }

	if (isSubdirectory($rootdirectory_to_check, $directory) == false) { return false; }
	else { return true; }

} // end isAuthorizedDirectory

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************





// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function isSubdirectory($parentdir, $childdir) {

// --------------
// Returns true if the childdir is a subdirectory of the parentdir
// --------------

	if ($parentdir == "" || $parentdir == "") { return true; }

	$parentdir = stripDirectory($parentdir);
	$childdir  = stripDirectory($childdir);

	if (substr($childdir, 0, strlen($parentdir)) == $parentdir) { return true; }
	else { return false; }

} // end isSubdirectory

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************





// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function logAccess($page) {

// --------------
// This function logs user accesses to the site
// Used in the function HtmlBegin(), see file html.inc.php
// --------------

// -------------------------------------------------------------------------
// Global variables and settings
// -------------------------------------------------------------------------
	$log_access  = getSetting("log_access");
	$use_database = getSetting("use_database");
	global $net2ftp_ftpserver, $net2ftp_username;
	global $REMOTE_ADDR, $REMOTE_PORT, $HTTP_USER_AGENT, $HTTP_REFERER;
	global $state, $state2, $directory, $file;

// -------------------------------------------------------------------------
// Check if the logging of Errors is ON or OFF
// -------------------------------------------------------------------------

	if ($log_access == "yes" && $use_database == "yes") {

// -------------------------------------------------------------------------
// Connect to the DB
// -------------------------------------------------------------------------
		$resultArray = connect2db();
		$mydb = getResult($resultArray);
		if ($mydb == false) { return putResult(false, "", "logAccess", "logAccess > " . $resultArray['drilldown'], $resultArray['message']); }

// -------------------------------------------------------------------------
// Log the accesses
// -------------------------------------------------------------------------
		$date = date("Y-m-d");
		$time = date("H:i:s");
		$sqlquerystring = "INSERT INTO net2ftp_logAccess VALUES('$date', '$time', '$REMOTE_ADDR', '$REMOTE_PORT', '$HTTP_USER_AGENT', '$page', '$net2ftp_ftpserver', '$net2ftp_username', '$state', '$state2', '$directory', '$file', '$HTTP_REFERER')";
		$result1 = @mysql_query($sqlquerystring);
		if ($result1 == false) { return putResult(false, "", "logAccess", "logAccess > sqlquery 1", "Unable to execute the SQL query 1<br />"); }
//		$affectedofrows = @mysql_affected_rows($mydb);

	} // end if logAccesses

// -------------------------------------------------------------------------
// If everything is OK, return true, let the user in
// -------------------------------------------------------------------------
	return putResult(true, true, "", "", "");

} // end logAccess()

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************






// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function logLogin($input_ftpserver, $input_username) {

// --------------
// This function logs user logins to the site
// Used in the index.php page
// --------------

// -------------------------------------------------------------------------
// Global variables and settings
// -------------------------------------------------------------------------
	$log_login  = getSetting("log_login");
	$use_database = getSetting("use_database");

	global $REMOTE_ADDR, $REMOTE_PORT, $HTTP_USER_AGENT;

// -------------------------------------------------------------------------
// Check if the logging of Logins is ON or OFF
// -------------------------------------------------------------------------
	if ($log_login == "yes" && $use_database == "yes") {

// -------------------------------------------------------------------------
// Connect to the DB
// -------------------------------------------------------------------------
	$resultArray = connect2db();
	$mydb = getResult($resultArray);
	if ($mydb == false) { return putResult(false, "", "logLogin", "logLogin > " . $resultArray['drilldown'], $resultArray['message']); }

// -------------------------------------------------------------------------
// Log the Logins
// -------------------------------------------------------------------------
		$date = date("Y-m-d");
		$time = date("H:i:s");
		$sqlquerystring = "INSERT INTO net2ftp_logLogin VALUES('$date', '$time', '$input_ftpserver', '$input_username', '$REMOTE_ADDR', '$REMOTE_PORT', '$HTTP_USER_AGENT')";
		$result1 = @mysql_query($sqlquerystring);
		if ($result1 == false) { return putResult(false, "", "logLogin", "logLogin > sqlquery 1", "Unable to execute the SQL query 1<br />"); }
//		$affectedofrows = @mysql_affected_rows($mydb);

	} // end if logLogins 

// -------------------------------------------------------------------------
// If everything is OK, return true, let the user in
// -------------------------------------------------------------------------
	return putResult(true, true, "", "", "");

} // end logLogin()

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************




// **************************************************************************************
// **************************************************************************************
// **                                                                                  **
// **                                                                                  **

function logError($message, $cause, $drilldown, $debug1, $debug2, $debug3, $debug4, $debug5) {

// --------------
// This function logs user accesses to the site
// Used in the function printErrorMessage(), see file errorhandling.inc.php
// --------------

// -------------------------------------------------------------------------
// Global variables and settings
// -------------------------------------------------------------------------
	$log_error  = getSetting("log_error");
	$use_database = getSetting("use_database");
	global $net2ftp_ftpserver, $net2ftp_username;
	global $state, $state2, $directory;
	global $REMOTE_ADDR, $REMOTE_PORT, $HTTP_USER_AGENT;

// -------------------------------------------------------------------------
// Check if the logging of Errors is ON or OFF
// -------------------------------------------------------------------------
	if ($log_error == "yes" && $use_database == "yes") {

// -------------------------------------------------------------------------
// Connect to the DB
// -------------------------------------------------------------------------
		$resultArray = connect2db();
		$mydb = getResult($resultArray);
		if ($mydb == false) { return putResult(false, "", "logError", "logError > " . $resultArray['drilldown'], $resultArray['message']); }

// -------------------------------------------------------------------------
// Log the Errors
// -------------------------------------------------------------------------
		$date = date("Y-m-d");
		$time = date("H:i:s");
		$sqlquerystring = "INSERT INTO net2ftp_logError VALUES('$date', '$time', '$net2ftp_ftpserver', '$net2ftp_username', '$message', '$cause', '$drilldown', '$state', '$state2', '$directory', '$debug1', '$debug2', '$debug3', '$debug4', '$debug5', '$REMOTE_ADDR', '$REMOTE_PORT', '$HTTP_USER_AGENT')";
		$result1 = @mysql_query($sqlquerystring);
		if ($result1 == false) { return putResult(false, "", "loguser", "loguser > sqlquery 1", "Unable to execute the SQL query 1<br />"); }
//		$affectedofrows = @mysql_affected_rows($mydb);

	} // end if logErrors

// -------------------------------------------------------------------------
// If everything is OK, return true, let the user in
// -------------------------------------------------------------------------
	return putResult(true, true, "", "", "");

} // end logError()

// **                                                                                  **
// **                                                                                  **
// **************************************************************************************
// **************************************************************************************




?>